<!--列表展示-->
<template>
  <view class="section">
    <view class="section section_gap">
      <view class="flex-wrp" style="flex-direction:row; margin: 26rpx;" wx:for-items="{{files}}" wx:key="key">
        <view class="flex-item bc_green" >
          <video bindlongtap="longTap('{{item}}')" src="{{item.url}}" poster="{{item.poster}}" style="width: 700rpx; height: 550rpx; background-color: #eeeeee;"></video>
        </view>
      </view>
      <view class="intro" wx:if="{{!start}}">没有更多了</view>
    </view>
  </view>
</template>
<script>
      import wepy from 'wepy';

      import api from "../api/api";
      import tip from '@/utils/tip';
      import {
        SYSTEM_INFO
      } from '@/utils/constant';
      export default class FilesPage extends wepy.page {
        config = {
          navigationBarTitleText: '视频列表',
        }
        data = {
          files: [],
          start: '',
          size: 100,
          fullUrl: ["111122"],
          lock: false,
          videoContent: {}
        }

        components = {

        }
        /**
         *
         *上拉触底
         */
        onReachBottom(){
          if(this.start){
            this.getFilesPage(this.start,this.size);
          }else{

          }
          console.log("上拉触底")
        }
        /**
         * 下拉刷新
         */
        onPullDownRefresh() {
          this.files = [];
          this.start = '';
          wepy.showNavigationBarLoading()
          setTimeout(()=>{
            this.getFilesPage("",this.size)
            wepy.stopPullDownRefresh()
            wepy.hideNavigationBarLoading()
            this.$apply()
          },1000)
        }
        onLoad() {
          this.getFilesPage("",this.size);
          this.videoContent = wx.createVideoContext("videoPlayer")
        }
        getFilesPage(start, size,replace){
          let that = this;
          this.start = start || this.start;
          this.size = size || this.size;
          api.selectVideo({
            query:{
              start: this.start,
              size: this.size,
              name: "videos"
            }
          }).then(res =>{
            if(res.data.code === 200){
              if(!this.files instanceof Array){
                this.files = []
              }
              if(this.files.length === 0){
                this.files = res.data.data.result;
              }else{
                let temp = {};
                if(replace){
                  temp = res.data.data.result;
                }else{
                  temp = this.files.concat(res.data.data.result);
                }
                this.files = temp;
              }
              this.start = res.data.data.start;
            }
            that.$apply()
            console.log(this.files)
            console.log(this.start)
          })
        }
        onShow(){

          console.log(wepy.getStorageSync(SYSTEM_INFO))
        }
        computed = {

        }
        async accessUrl(name){
          let that = this;
          let res = await api.accessUrl({
            query:{
              name: name
            }
          })
          if(res.data.data){
            that.fullUrl = res.data.data;
          }
          return res.data.data;
        }
        async deleteFile(name){
          await api.deleteFile({
            query: name,
            method: 'DELETE'
          })
        }
        methods = {
          touchend(){
            console.log("touchend")
            setTimeout(() => {
              this.lock = false;
            }, 100);
          },
          longTap(obj){
            let that = this;
            console.log("long tap")
            wx.showActionSheet({
              itemList: ['删除视频', '复制链接'],
              success(res) {
                if(res.tapIndex === 0){ // 删除图片
                  that.deleteFile(obj.name).then(()=>{
                    that.start = '';
                    that.getFilesPage("",that.size,true);
                  });
                }else if(res.tapIndex === 1){ // 复制链接
                  wx.setClipboardData({
                    data: obj.url,
                    success(res) {
                      wx.getClipboardData({
                        success(res) {
                          console.log(res.data) // data
                        }
                      })
                    }
                  })
                }
              },
              fail(res) {
                console.log(res.errMsg)
              }
            })
          },
          clickImage(item){
            if(this.lock){
              return;
            }
            let that = this;
            console.log(item,key)
            that.accessUrl(item.name).then(res =>{
              console.log(res)
              that.fullUrl[key] = res;
              that.$apply()
              that.videoContent.play();
            })

          }

        }

        events = {

        }

      }

    </script>
<style lang="less">
  .page-section{
    margin-bottom: 20rpx;
  }
  .flex-wrp {display: flex;}
  .bc_green {background: #ffffff;margin: 2rpx;}
  .bc_red {background: red;width:170rpx; height: 170rpx; margin: 2rpx;}
  .bc_blue {background: blue;width:170rpx; height: 170rpx; margin: 2rpx;}
  .intro {
    margin: 30rpx;
    text-align: center;
  }

</style>

